{"ast":null,"code":"class Api {\n  constructor(config) {\n    this._url = config.url;\n    this._headers = config.headers;\n  }\n  _handleResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(new Error('Произошла ошибка'));\n  }\n  getCards() {\n    return fetch(`${this._url}/cards`, {\n      headers: this._headers\n    }).then(res => this._handleResponse(res));\n  }\n  createCard(item) {\n    return fetch(`${this._url}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: item.name,\n        link: item.link\n      })\n    }).then(res => this._handleResponse(res));\n  }\n  enableLikeCounting(isLiked, cardId) {\n    return fetch(`${this._url}/cards/${cardId}/likes`, {\n      method: isLiked ? 'DELETE' : 'PUT',\n      headers: this._headers\n    }).then(err => {\n      return this._handleResponse(err);\n    });\n  }\n  deleteCard(id) {\n    return fetch(`${this._url}/cards/${id}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(err => {\n      return this._handleResponse(err);\n    });\n  }\n  getUserData() {\n    return fetch(`${this._url}/users/me`, {\n      headers: this._headers\n    }).then(res => this._handleResponse(res));\n  }\n  changeAvatarImg(link) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: link\n      })\n    }).then(res => this._handleResponse(res));\n  }\n  applyUserData(_ref) {\n    let {\n      name,\n      description\n    } = _ref;\n    return fetch(`${this._url}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        about: description\n      })\n    }).then(res => this._handleResponse(res));\n  }\n}\nconst api = new Api({\n  url: 'https://mesto.nomoreparties.co/v1/cohort-60',\n  headers: {\n    authorization: '6f350c74-9eae-4112-a46f-4d781c8a0946',\n    'Content-Type': 'application/json'\n  }\n});\nexport default api;","map":{"version":3,"names":["Api","constructor","config","_url","url","_headers","headers","_handleResponse","res","ok","json","Promise","reject","Error","getCards","fetch","then","createCard","item","method","body","JSON","stringify","name","link","enableLikeCounting","isLiked","cardId","err","deleteCard","id","getUserData","changeAvatarImg","avatar","applyUserData","_ref","description","about","api","authorization"],"sources":["C:/Users/skavr/dev/mesto-react/src/utils/api.js"],"sourcesContent":["class Api {\r\n  constructor(config) {\r\n    this._url = config.url;\r\n    this._headers = config.headers;\r\n  }\r\n\r\n  _handleResponse(res) {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(new Error('Произошла ошибка'))\r\n  }\r\n\r\n  getCards() {\r\n    return fetch(`${this._url}/cards`, {\r\n      headers: this._headers\r\n    })\r\n    .then((res) => this._handleResponse(res));\r\n  }\r\n\r\n  createCard(item) {\r\n    return fetch(`${this._url}/cards`, {\r\n      method: 'POST',\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: item.name,\r\n        link: item.link\r\n      })\r\n    })\r\n    .then((res) => this._handleResponse(res));\r\n  }\r\n\r\n  enableLikeCounting(isLiked, cardId) {\r\n    return fetch(`${this._url}/cards/${cardId}/likes`, {\r\n      method: isLiked ? 'DELETE' : 'PUT',\r\n      headers: this._headers,\r\n    })\r\n    .then(err => {\r\n      return this._handleResponse(err)\r\n    })\r\n  }\r\n\r\n  deleteCard(id) {\r\n    return fetch(`${this._url}/cards/${id}`, {\r\n      method: 'DELETE',\r\n      headers: this._headers,\r\n    })\r\n    .then(err => {\r\n      return this._handleResponse(err)\r\n    })\r\n  }\r\n\r\n  getUserData() {\r\n    return fetch(`${this._url}/users/me`, {\r\n      headers: this._headers\r\n    })\r\n    .then((res) => this._handleResponse(res));\r\n  }\r\n\r\n  changeAvatarImg(link) {\r\n    return fetch(`${this._url}/users/me/avatar`, {\r\n      method: 'PATCH',\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        avatar: link\r\n      })\r\n    })\r\n    .then(res => this._handleResponse(res))\r\n  }\r\n\r\n  applyUserData({name, description}) {\r\n    return fetch(`${this._url}/users/me`, {\r\n      method: 'PATCH',\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: name,\r\n        about: description\r\n      })\r\n    })\r\n    .then((res) => this._handleResponse(res));\r\n  }\r\n}\r\n\r\nconst api = new Api({\r\n  url: 'https://mesto.nomoreparties.co/v1/cohort-60',\r\n  headers: {\r\n    authorization: '6f350c74-9eae-4112-a46f-4d781c8a0946',\r\n    'Content-Type': 'application/json'\r\n  }\r\n})\r\n\r\nexport default api;"],"mappings":"AAAA,MAAMA,GAAG,CAAC;EACRC,WAAWA,CAACC,MAAM,EAAE;IAClB,IAAI,CAACC,IAAI,GAAGD,MAAM,CAACE,GAAG;IACtB,IAAI,CAACC,QAAQ,GAAGH,MAAM,CAACI,OAAO;EAChC;EAEAC,eAAeA,CAACC,GAAG,EAAE;IACnB,IAAIA,GAAG,CAACC,EAAE,EAAE;MACV,OAAOD,GAAG,CAACE,IAAI,EAAE;IACnB;IACA,OAAOC,OAAO,CAACC,MAAM,CAAC,IAAIC,KAAK,CAAC,kBAAkB,CAAC,CAAC;EACtD;EAEAC,QAAQA,CAAA,EAAG;IACT,OAAOC,KAAK,CAAE,GAAE,IAAI,CAACZ,IAAK,QAAO,EAAE;MACjCG,OAAO,EAAE,IAAI,CAACD;IAChB,CAAC,CAAC,CACDW,IAAI,CAAER,GAAG,IAAK,IAAI,CAACD,eAAe,CAACC,GAAG,CAAC,CAAC;EAC3C;EAEAS,UAAUA,CAACC,IAAI,EAAE;IACf,OAAOH,KAAK,CAAE,GAAE,IAAI,CAACZ,IAAK,QAAO,EAAE;MACjCgB,MAAM,EAAE,MAAM;MACdb,OAAO,EAAE,IAAI,CAACD,QAAQ;MACtBe,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBC,IAAI,EAAEL,IAAI,CAACK,IAAI;QACfC,IAAI,EAAEN,IAAI,CAACM;MACb,CAAC;IACH,CAAC,CAAC,CACDR,IAAI,CAAER,GAAG,IAAK,IAAI,CAACD,eAAe,CAACC,GAAG,CAAC,CAAC;EAC3C;EAEAiB,kBAAkBA,CAACC,OAAO,EAAEC,MAAM,EAAE;IAClC,OAAOZ,KAAK,CAAE,GAAE,IAAI,CAACZ,IAAK,UAASwB,MAAO,QAAO,EAAE;MACjDR,MAAM,EAAEO,OAAO,GAAG,QAAQ,GAAG,KAAK;MAClCpB,OAAO,EAAE,IAAI,CAACD;IAChB,CAAC,CAAC,CACDW,IAAI,CAACY,GAAG,IAAI;MACX,OAAO,IAAI,CAACrB,eAAe,CAACqB,GAAG,CAAC;IAClC,CAAC,CAAC;EACJ;EAEAC,UAAUA,CAACC,EAAE,EAAE;IACb,OAAOf,KAAK,CAAE,GAAE,IAAI,CAACZ,IAAK,UAAS2B,EAAG,EAAC,EAAE;MACvCX,MAAM,EAAE,QAAQ;MAChBb,OAAO,EAAE,IAAI,CAACD;IAChB,CAAC,CAAC,CACDW,IAAI,CAACY,GAAG,IAAI;MACX,OAAO,IAAI,CAACrB,eAAe,CAACqB,GAAG,CAAC;IAClC,CAAC,CAAC;EACJ;EAEAG,WAAWA,CAAA,EAAG;IACZ,OAAOhB,KAAK,CAAE,GAAE,IAAI,CAACZ,IAAK,WAAU,EAAE;MACpCG,OAAO,EAAE,IAAI,CAACD;IAChB,CAAC,CAAC,CACDW,IAAI,CAAER,GAAG,IAAK,IAAI,CAACD,eAAe,CAACC,GAAG,CAAC,CAAC;EAC3C;EAEAwB,eAAeA,CAACR,IAAI,EAAE;IACpB,OAAOT,KAAK,CAAE,GAAE,IAAI,CAACZ,IAAK,kBAAiB,EAAE;MAC3CgB,MAAM,EAAE,OAAO;MACfb,OAAO,EAAE,IAAI,CAACD,QAAQ;MACtBe,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBW,MAAM,EAAET;MACV,CAAC;IACH,CAAC,CAAC,CACDR,IAAI,CAACR,GAAG,IAAI,IAAI,CAACD,eAAe,CAACC,GAAG,CAAC,CAAC;EACzC;EAEA0B,aAAaA,CAAAC,IAAA,EAAsB;IAAA,IAArB;MAACZ,IAAI;MAAEa;IAAW,CAAC,GAAAD,IAAA;IAC/B,OAAOpB,KAAK,CAAE,GAAE,IAAI,CAACZ,IAAK,WAAU,EAAE;MACpCgB,MAAM,EAAE,OAAO;MACfb,OAAO,EAAE,IAAI,CAACD,QAAQ;MACtBe,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBC,IAAI,EAAEA,IAAI;QACVc,KAAK,EAAED;MACT,CAAC;IACH,CAAC,CAAC,CACDpB,IAAI,CAAER,GAAG,IAAK,IAAI,CAACD,eAAe,CAACC,GAAG,CAAC,CAAC;EAC3C;AACF;AAEA,MAAM8B,GAAG,GAAG,IAAItC,GAAG,CAAC;EAClBI,GAAG,EAAE,6CAA6C;EAClDE,OAAO,EAAE;IACPiC,aAAa,EAAE,sCAAsC;IACrD,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEF,eAAeD,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}