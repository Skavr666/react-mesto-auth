{"ast":null,"code":"function handleResponse(res){if(res.ok){return res.json();}return Promise.reject(new Error('Произошла ошибка'));}export var BASE_URL=\"https://auth.nomoreparties.co\";export function handleRegistration(_ref){var email=_ref.email,password=_ref.password;return fetch(\"\".concat(BASE_URL,\"/signup\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email:email,password:password})}).then(function(res){return handleResponse(res);});}export function handleLogIn(_ref2){var email=_ref2.email,password=_ref2.password;return fetch(\"\".concat(BASE_URL,\"/signin\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email:email,password:password})}).then(function(res){return handleResponse(res);});}export function getToken(token){return fetch(\"\".concat(BASE_URL,\"/users/me\"),{method:\"GET\",headers:{\"Content-Type\":\"application/json\",Authorization:\"Bearer \".concat(token)}}).then(function(res){return handleResponse(res);});}","map":{"version":3,"names":["handleResponse","res","ok","json","Promise","reject","Error","BASE_URL","handleRegistration","_ref","email","password","fetch","concat","method","headers","body","JSON","stringify","then","handleLogIn","_ref2","getToken","token","Authorization"],"sources":["C:/Users/skavr/dev/react-mesto-auth/src/utils/auth.js"],"sourcesContent":["function handleResponse(res) {\r\n  if (res.ok) {\r\n    return res.json();\r\n  }\r\n  return Promise.reject(new Error('Произошла ошибка'))\r\n}\r\n\r\nexport const BASE_URL = \"https://auth.nomoreparties.co\";\r\n\r\nexport function handleRegistration({email, password}) {\r\n  return fetch(`${BASE_URL}/signup`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({email, password})\r\n  })\r\n  .then((res) => handleResponse(res));\r\n}\r\n\r\nexport function handleLogIn({email, password}) {\r\n  return fetch(`${BASE_URL}/signin`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({email, password})\r\n  })\r\n  .then((res) => handleResponse(res));\r\n}\r\n\r\nexport function getToken(token) {\r\n  return fetch(`${BASE_URL}/users/me`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  })\r\n  .then((res) => handleResponse(res));\r\n}"],"mappings":"AAAA,QAAS,CAAAA,cAAcA,CAACC,GAAG,CAAE,CAC3B,GAAIA,GAAG,CAACC,EAAE,CAAE,CACV,MAAO,CAAAD,GAAG,CAACE,IAAI,EAAE,CACnB,CACA,MAAO,CAAAC,OAAO,CAACC,MAAM,CAAC,GAAI,CAAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC,CACtD,CAEA,MAAO,IAAM,CAAAC,QAAQ,CAAG,+BAA+B,CAEvD,MAAO,SAAS,CAAAC,kBAAkBA,CAAAC,IAAA,CAAoB,IAAlB,CAAAC,KAAK,CAAAD,IAAA,CAALC,KAAK,CAAEC,QAAQ,CAAAF,IAAA,CAARE,QAAQ,CACjD,MAAO,CAAAC,KAAK,IAAAC,MAAA,CAAIN,QAAQ,YAAW,CACjCO,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAACR,KAAK,CAALA,KAAK,CAAEC,QAAQ,CAARA,QAAQ,CAAC,CACxC,CAAC,CAAC,CACDQ,IAAI,CAAC,SAAClB,GAAG,QAAK,CAAAD,cAAc,CAACC,GAAG,CAAC,GAAC,CACrC,CAEA,MAAO,SAAS,CAAAmB,WAAWA,CAAAC,KAAA,CAAoB,IAAlB,CAAAX,KAAK,CAAAW,KAAA,CAALX,KAAK,CAAEC,QAAQ,CAAAU,KAAA,CAARV,QAAQ,CAC1C,MAAO,CAAAC,KAAK,IAAAC,MAAA,CAAIN,QAAQ,YAAW,CACjCO,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAACR,KAAK,CAALA,KAAK,CAAEC,QAAQ,CAARA,QAAQ,CAAC,CACxC,CAAC,CAAC,CACDQ,IAAI,CAAC,SAAClB,GAAG,QAAK,CAAAD,cAAc,CAACC,GAAG,CAAC,GAAC,CACrC,CAEA,MAAO,SAAS,CAAAqB,QAAQA,CAACC,KAAK,CAAE,CAC9B,MAAO,CAAAX,KAAK,IAAAC,MAAA,CAAIN,QAAQ,cAAa,CACnCO,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CACP,cAAc,CAAE,kBAAkB,CAClCS,aAAa,WAAAX,MAAA,CAAYU,KAAK,CAChC,CACF,CAAC,CAAC,CACDJ,IAAI,CAAC,SAAClB,GAAG,QAAK,CAAAD,cAAc,CAACC,GAAG,CAAC,GAAC,CACrC"},"metadata":{},"sourceType":"module","externalDependencies":[]}