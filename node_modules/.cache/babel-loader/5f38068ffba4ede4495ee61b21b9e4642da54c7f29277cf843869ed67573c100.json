{"ast":null,"code":"function handleResponse(res) {\n  if (res.ok) {\n    return res.json();\n  }\n  return Promise.reject(new Error('Произошла ошибка'));\n}\nexport const BASE_URL = \"https://auth.nomoreparties.co\";\nexport function handleRegistration(_ref) {\n  let {\n    email,\n    password\n  } = _ref;\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(res => handleResponse(res));\n}\nexport function handleLogIn(email, password) {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(res => handleResponse(res));\n}\nexport function getToken(token) {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    }\n  }).then(res => handleResponse(res));\n}","map":{"version":3,"names":["handleResponse","res","ok","json","Promise","reject","Error","BASE_URL","handleRegistration","_ref","email","password","fetch","method","headers","body","JSON","stringify","then","handleLogIn","getToken","token","Authorization"],"sources":["C:/Users/skavr/dev/react-mesto-auth/src/utils/auth.js"],"sourcesContent":["function handleResponse(res) {\r\n  if (res.ok) {\r\n    return res.json();\r\n  }\r\n  return Promise.reject(new Error('Произошла ошибка'))\r\n}\r\n\r\nexport const BASE_URL = \"https://auth.nomoreparties.co\";\r\n\r\nexport function handleRegistration({email, password}) {\r\n  return fetch(`${BASE_URL}/signup`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({email, password})\r\n  })\r\n  .then((res) => handleResponse(res));\r\n}\r\n\r\nexport function handleLogIn(email, password) {\r\n  return fetch(`${BASE_URL}/signin`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({email, password})\r\n  })\r\n  .then((res) => handleResponse(res));\r\n}\r\n\r\nexport function getToken(token) {\r\n  return fetch(`${BASE_URL}/users/me`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  })\r\n  .then((res) => handleResponse(res));\r\n}"],"mappings":"AAAA,SAASA,cAAcA,CAACC,GAAG,EAAE;EAC3B,IAAIA,GAAG,CAACC,EAAE,EAAE;IACV,OAAOD,GAAG,CAACE,IAAI,EAAE;EACnB;EACA,OAAOC,OAAO,CAACC,MAAM,CAAC,IAAIC,KAAK,CAAC,kBAAkB,CAAC,CAAC;AACtD;AAEA,OAAO,MAAMC,QAAQ,GAAG,+BAA+B;AAEvD,OAAO,SAASC,kBAAkBA,CAAAC,IAAA,EAAoB;EAAA,IAAnB;IAACC,KAAK;IAAEC;EAAQ,CAAC,GAAAF,IAAA;EAClD,OAAOG,KAAK,CAAE,GAAEL,QAAS,SAAQ,EAAE;IACjCM,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAACP,KAAK;MAAEC;IAAQ,CAAC;EACxC,CAAC,CAAC,CACDO,IAAI,CAAEjB,GAAG,IAAKD,cAAc,CAACC,GAAG,CAAC,CAAC;AACrC;AAEA,OAAO,SAASkB,WAAWA,CAACT,KAAK,EAAEC,QAAQ,EAAE;EAC3C,OAAOC,KAAK,CAAE,GAAEL,QAAS,SAAQ,EAAE;IACjCM,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAACP,KAAK;MAAEC;IAAQ,CAAC;EACxC,CAAC,CAAC,CACDO,IAAI,CAAEjB,GAAG,IAAKD,cAAc,CAACC,GAAG,CAAC,CAAC;AACrC;AAEA,OAAO,SAASmB,QAAQA,CAACC,KAAK,EAAE;EAC9B,OAAOT,KAAK,CAAE,GAAEL,QAAS,WAAU,EAAE;IACnCM,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClCQ,aAAa,EAAG,UAASD,KAAM;IACjC;EACF,CAAC,CAAC,CACDH,IAAI,CAAEjB,GAAG,IAAKD,cAAc,CAACC,GAAG,CAAC,CAAC;AACrC"},"metadata":{},"sourceType":"module","externalDependencies":[]}